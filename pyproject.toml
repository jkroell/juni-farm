
[tool.ruff]
line-length = 79
extend-exclude = [
    "__init__.py",
    "junifer/external/h5io",
    "junifer/external/BrainPrint",
    "docs",
    "examples",
    "tools",
]

[tool.ruff.lint]
select = [
    # flake8-bugbear
    "B",
    # flake8-blind-except
    "BLE",
    # flake8-comprehensions
    "C4",
    # mccabe
    "C90",
    # pydocstyle
    "D",
    # pycodestyle errors
    "E",
    # pyflakes
    "F",
    # isort
    "I",
    # pep8-naming
    "N",
    # pygrep-hooks
    "PGH",
    # ruff
    "RUF",
    # flake8-type-checking
    "TCH",
    # pyupgrade
    "UP",
    # pycodestyle warnings
    "W",
    # flake8-2020
    "YTT",
]
ignore = [
    # Use of `functools.lru_cache` or `functools.cache` on methods can lead to
    # memory leaks. The cache may retain instance references, preventing garbage
    # collection.
    "B019",
    # abstract class with no abstract methods
    "B024",
    "D202",
    # missing docstring in __init__, incompatible with numpydoc
    "D107",
    # use r""" if any backslashes in a docstring
    "D301",
    # class names should use CapWords convention
    "N801",
    # function name should be lowercase
    "N802",
    # variable in function should be lowercase
    "N806",
    # use specific rule codes when ignoring type issues
    "PGH003",
]

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["junifer"]
known-third-party =[
    "click",
    "numpy",
    "scipy",
    "datalad",
    "pandas",
    "nibabel",
    "nilearn",
    "sqlalchemy",
    "yaml",
    "importlib_metadata",
    "httpx",
    "tqdm",
    "templateflow",
    "bct",
    "neurokit2",
    "brainprint",
    "lapy",
    "pytest",
]

[tool.ruff.lint.mccabe]
max-complexity = 20